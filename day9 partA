import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class day9Parta {

	public static void main (String [] args) {
	ArrayList <String> list = importFile("day9input.txt");	
	
	//System.out.println ((char)88); Could be used to mark points with an X to make them easier to identify
	
	System.out.println (list + "\n\n");
	
	mapRisk(import2DArray(list));	
	}
	
	public static void mapRisk (int [][] map) {
		int risk = 0; 
		
		risk += topMap(map); 
		risk += bottomMap(map); 
		risk += leftMap(map); 
		risk += sweepMap(map);
		
		System.out.println ("The total risk for this map is: " + risk); 
	}
	
	public static int topMap (int [][] map) {
		int risk = 0; 
		
		for (int col = 0; col < map[0].length; col++) {
			int point = map[0][col]; 
			
			if (col == 0) {
				if (point < map[1][0] && point < map[0][1]) risk += point + 1; 
				
			}
			
			else if (col == 99) {
				if (point < map[map[0].length - 2][0] && point < map[1][map[0].length]) risk += point + 1; 
				
			}
			else {
				if (point < map[1][col] && point < map[0][col - 1] && point < map[0][col + 1]) risk += point + 1; 
				
			}	
	
		}
		return risk; 
	}

	public static int bottomMap (int [][] map) {
		int risk = 0; 
		
		for (int col = 0; col < map[99].length; col++) {
			int point = map[99][col]; 
			
			if (col == 0) {
				if (point < map[98][0] && point < map[99][1]) risk += point + 1; 
				
			}
			
			else if (col == 99) {
				if (point < map[map[0].length - 2][99] && point < map[98][99]) risk += point + 1; 
				
			}
			else {
				if (point < map[98][col] && point < map[99][col - 1] && point < map[99][col + 1]) risk += point + 1; 
				
			}	
	
		}
		return risk; 
	}
	
	public static int leftMap (int [][] map) {
		int risk = 0; 
		
		for (int row = 1; row < 99; row++) {
			int point = map[row][0];
			int point2 = map[row][99];
			
			if (point < map[row - 1][0] && point < map[row + 1][0] && point < map[row][1]) risk += point + 1; 
			if (point2 < map[row - 1][99] && point2 < map[row + 1][99] && point2 < map[row][98]) risk += point2 + 1; 	
		}
		return risk; 
	}
	
	public static int sweepMap (int [][] map) {
		int risk = 0; 
		
		for (int row = 1; row < 99; row++) {
			for (int col = 1; col < 99; col++) {
			int point = map[row][col];
			
			if (point < map[row - 1][col] && point < map[row + 1][col] && point < map[row][col - 1] && point < map[row][col + 1]) risk += point + 1;
				
			}
		}
		
		return risk;
	}
	
	//Imports the .txt file into the 2D array
	public static int[][] import2DArray (ArrayList<String> list) {
	    int height = list.get(0).length();
	    int width = list.size(); 
		
		int[][] array = new int[height][width];
	    
	    
	    for (int row = 0; row < height; row++) {
	    	for (int col = 0; col < width; col++) {
				String word = list.get(row); 		
				array[row][col] = Integer.parseInt(word.substring(0, 1));
				list.set(row, word.substring(1)); 
	    	}
	    }
	     
	  printArray(array);
	  return array;   
	}
	   
	public static void printArray (int [][] array) {

	      for (int row = 0; row < array.length; row++) {
	          for (int col = 0; col < array.length; col++) {
	              System.out.print (array[row][col] + " ");
	          }
	        System.out.println();
	      }
	    System.out.println("\n");
	  }
	
	public static ArrayList<String> importFile(String fileName) {
	    ArrayList<String> words = new ArrayList<>();
	    try {
	      File myObj = new File(fileName);
	      Scanner myReader = new Scanner(myObj);
	      while (myReader.hasNextLine()) {
	        String data = myReader.nextLine();
	        words.add(data);
	      }
	      myReader.close();
	    } catch (FileNotFoundException e) {
	      System.out.println("An error occurred.");
	      e.printStackTrace();
	    }
	    return words;
	  }

}
